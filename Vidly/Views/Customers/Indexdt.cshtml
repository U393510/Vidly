@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

<table id="customers" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Membership Type</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
</table>

@section scripts
{
    <script>
        $(document).ready(function () {
            //Create data table from customers webapi 
            var table = $("#customers").DataTable({
                 //Let fetch data from our API and show it
                //in customers HTML table defined above 
                ajax: {
                        url: "/api/customers",
                        //Since our api is directly providing the data so we set
                        //datasoruce to empty string 
                        dataSrc:""
                      },
                columns: [
                            //Build/define data table columns that will show api JSON object data
                            {
                                //Data property tell data table where to get the data for this column
                                //so specify field data source. In current case it is name property
                                //representing customer name in json object 
                                data: "name",
                                //Second we need to supply custom renderring function which will be called for each row
                                //here we can add some parameters to control renderring. First we pass data parameter which is 
                                //a value of data property defined above, type for this column, actual object we are renderring 
                                //i.e. customer. In current case we are providing hyperlinks on customer name 
                                //so that user can click it and edit it.
                                render: function (data, type, customer) {
                                    return "<a href = '/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                                }
                            },
                            {
                                //specify exactly in same way as shown in api output
                                data: "membershipType.name"
                            },
                            {
                                data: "id",
                                render: function (data) {
                                    return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                                }
                            }
                        ]
            });
            //Look for DOM element having id = customers  which is our HTML table 
            //and search for element in it having js-delete class which is Delete Button
            //capture button click event and specify call back furnction which
            //will be called when button is clicked and capture reference to this button. 
            //we will first ask user to confirm delete and then make an ajax call
            //having uri + id by using data attribute data-<any Name> specified in delete button and refer to it
            $("#customers").on("click",".js-delete", function () {
                var button = $(this)
                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                //Below code only removes item form HtML table but not from Data tables so we need modiy it 
                                //finally with reference to Delete button which is residing in side table row i.e. its parent
                                //you will call button.parents("tr").remove to remove the row after deletion
                                //button.parents("tr").remove();
                                table.row(button.parents("tr")).remove().draw();
                            }
                        })
                    }
                });
            })
        });
    </script>
}